# Nginx Load Balancer Configuration

upstream mycluster {
    # Use dynamic host entries from /etc/hosts managed by Ansible block
    {% for host in groups['web_servers'] | map('extract', hostvars) | list %}
    server {{ host.backend_name | default(host.ansible_host, true) | default(host.inventory_hostname, true) }}:80 weight=5;
    {% endfor %}
}

# HTTP server block: Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    {% if nginx_lb_server_name | default('') != '' %}
    server_name {{ nginx_lb_server_name }} www.{{ nginx_lb_server_name }};
    {% else %}
    server_name _;
    {% endif %}
    
    # Redirect to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server block: Handle SSL traffic
server {
    listen 443 ssl;
    {% if nginx_lb_server_name | default('') != '' %}
    server_name {{ nginx_lb_server_name }} www.{{ nginx_lb_server_name }};
    {% else %}
    server_name _;
    {% endif %}

    # Specify certificate locations (Certbot will update these files)
    ssl_certificate /etc/letsencrypt/live/{{ nginx_lb_server_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ nginx_lb_server_name }}/privkey.pem;

    # Optionally, specify additional SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://mycluster;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}
