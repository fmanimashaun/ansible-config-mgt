---
# Ensure snapd is installed and active
- name: Ensure snapd is installed and active
  become: true
  ansible.builtin.apt:
    name: snapd
    state: present
    update_cache: true
  when:
    - load_balancer_is_required
    - nginx_lb_enabled

# Ensure snapd is running and enabled
- name: Ensure snapd service is running
  become: true
  ansible.builtin.systemd:
    name: snapd
    state: started
    enabled: true
  when:
    - load_balancer_is_required
    - nginx_lb_enabled

# Install Certbot via snap
- name: Install Certbot via snap
  become: true
  community.general.snap:
    name: certbot
    classic: true
    state: present
  when:
    - load_balancer_is_required
    - nginx_lb_enabled

# Create symlink for Certbot
- name: Create symlink for certbot
  become: true
  ansible.builtin.file:
    src: /snap/bin/certbot
    dest: /usr/bin/certbot
    state: link
  when:
    - load_balancer_is_required
    - nginx_lb_enabled

# Obtain SSL certificate for Apache using Certbot
- name: Obtain SSL certificate for Apache using Certbot
  become: true
  ansible.builtin.shell: >
    certbot --apache --non-interactive --agree-tos
    --email {{ nginx_lb_certbot_email }}
    --domains {{ nginx_lb_server_name }},www.{{ nginx_lb_server_name }}
  args:
    creates: "/etc/letsencrypt/live/{{ nginx_lb_server_name }}/fullchain.pem"
  register: certbot_obtain
  notify: 
    - Reload Nginx
  when:
    - load_balancer_is_required
    - nginx_lb_enabled

# Create the automatic renewal
- name: Schedule automatic Certbot certificate renewal
  become: true
  ansible.builtin.cron:
    name: "Renew Let's Encrypt certificates"
    minute: "0"
    hour: "3"
    job: "certbot renew --quiet"
    user: root
  when:
    - load_balancer_is_required
    - nginx_lb_enabled